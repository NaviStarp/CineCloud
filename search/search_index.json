{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bienvenido a la Documentaci\u00f3n de Cinecloud","text":""},{"location":"#acerca-de-cinecloud","title":"Acerca de Cinecloud","text":"<p>Cinecloud es una plataforma de streaming completa que ofrece a los usuarios una experiencia fluida para ver pel\u00edculas y series. La plataforma est\u00e1 dividida en dos componentes principales:</p> <ul> <li>Backend: Desarrollado en Django, proporciona APIs robustas, autenticaci\u00f3n de usuarios, y servicios de streaming HLS.</li> <li>Frontend: Desarrollado en Angular, ofrece una interfaz de usuario moderna y responsive para acceder al contenido multimedia.</li> </ul>"},{"location":"#caracteristicas-principales","title":"Caracter\u00edsticas principales","text":"<ul> <li>Streaming adaptativo: Tecnolog\u00eda HLS para una reproducci\u00f3n fluida en diferentes condiciones de red</li> <li>Gesti\u00f3n de contenido: Categorizaci\u00f3n completa de pel\u00edculas y series</li> <li>Autenticaci\u00f3n segura: Sistema robusto de registro y control de acceso</li> <li>Dise\u00f1o responsive: Experiencia optimizada para todos los dispositivos</li> <li>Arquitectura escalable: Dise\u00f1ada para soportar crecimiento en usuarios y contenido</li> </ul>"},{"location":"#comenzando","title":"Comenzando","text":"<p>\u00bfBuscas configurar Cinecloud? Explora nuestra documentaci\u00f3n:</p> <ul> <li>Configuraci\u00f3n del Backend: Aprende a instalar y configurar el servidor Django</li> <li>Configuraci\u00f3n del Frontend: Pasos para instalar y ejecutar la aplicaci\u00f3n Angular</li> </ul>"},{"location":"#estructura-del-proyecto","title":"Estructura del proyecto","text":"<p>La documentaci\u00f3n est\u00e1 organizada en las siguientes secciones:</p>"},{"location":"#backend","title":"Backend","text":"<ul> <li>Visi\u00f3n general</li> <li>Instalaci\u00f3n</li> <li>Arquitectura</li> </ul>"},{"location":"#frontend","title":"Frontend","text":"<ul> <li>Visi\u00f3n general</li> <li>Instalaci\u00f3n</li> </ul>"},{"location":"#contribuir","title":"Contribuir","text":"<p>\u00bfInteresado en contribuir a Cinecloud? Consulta nuestros repositorios:</p> <ul> <li>Backend de Cinecloud</li> <li>Frontend de Cinecloud</li> </ul>"},{"location":"#soporte","title":"Soporte","text":"<p>Si encuentras alg\u00fan problema o tienes alguna pregunta, abre un issue en el repositorio correspondiente en GitHub.</p>"},{"location":"backend/","title":"Backend de Cinecloud","text":""},{"location":"backend/#vision-general","title":"Visi\u00f3n general","text":"<p>Cinecloud Backend es una aplicaci\u00f3n desarrollada en Django que proporciona funcionalidades avanzadas para la autenticaci\u00f3n de usuarios, renderizaci\u00f3n de contenido multimedia y transmisi\u00f3n en streaming de videos clasificados como pel\u00edculas y series.</p> <p>Este sistema est\u00e1 dise\u00f1ado para ofrecer una experiencia fluida y segura, permitiendo a los usuarios acceder a contenido de alta calidad de manera eficiente. Adem\u00e1s, su arquitectura modular facilita la escalabilidad y el mantenimiento del proyecto, adapt\u00e1ndose a las necesidades de crecimiento y evoluci\u00f3n de la plataforma.</p>"},{"location":"backend/#tecnologias-principales","title":"Tecnolog\u00edas principales","text":"<ul> <li>Django: Framework web Python de alto nivel</li> <li>Django REST Framework: Para la creaci\u00f3n de APIs RESTful</li> <li>Django Channels: Para funcionalidades WebSocket y ASGI</li> <li>FFmpeg: Procesamiento de archivos multimedia para streaming HLS</li> <li>Docker: Contenedores para facilitar el despliegue</li> <li>PostgreSQL: Base de datos relacional</li> </ul>"},{"location":"backend/#caracteristicas-clave","title":"Caracter\u00edsticas clave","text":"<ul> <li>Autenticaci\u00f3n robusta: Sistema completo de registro, inicio de sesi\u00f3n y gesti\u00f3n de perfiles</li> <li>Streaming HLS: Transmisi\u00f3n adaptativa de contenido multimedia</li> <li>API RESTful: Endpoints bien documentados para integraciones f\u00e1ciles</li> <li>WebSockets: Comunicaci\u00f3n en tiempo real para funcionalidades interactivas</li> <li>Procesamiento multimedia: Conversi\u00f3n y optimizaci\u00f3n de archivos de video</li> <li>Arquitectura modular: Aplicaciones Django independientes para una mejor organizaci\u00f3n</li> </ul>"},{"location":"backend/#requisitos-previos","title":"Requisitos previos","text":"<p>Antes de comenzar con la instalaci\u00f3n, aseg\u00farate de tener instalado:</p> <ul> <li>Python (v3.8 o superior)</li> <li>Docker y Docker Compose</li> <li>Entorno virtual de Python (recomendado)</li> </ul>"},{"location":"backend/#siguientes-pasos","title":"Siguientes pasos","text":"<ul> <li>Instalaci\u00f3n: Gu\u00eda completa para configurar el backend</li> <li>Arquitectura: Estructura detallada del proyecto</li> </ul>"},{"location":"backend/arquitectura/","title":"Arquitectura del Backend","text":"<p>Esta p\u00e1gina detalla la estructura y organizaci\u00f3n del backend de Cinecloud, proporcionando una comprensi\u00f3n clara de c\u00f3mo interact\u00faan sus componentes.</p>"},{"location":"backend/arquitectura/#estructura-del-proyecto","title":"Estructura del proyecto","text":"<p>La arquitectura de Cinecloud Backend sigue un dise\u00f1o modular basado en aplicaciones Django:</p> <pre><code>\u251c\u2500\u2500 cinecloud           # Aplicaci\u00f3n principal del proyecto\n\u2502   \u251c\u2500\u2500 asgi.py         # Configuraci\u00f3n ASGI para canales WebSocket\n\u2502   \u251c\u2500\u2500 consumers.py    # Consumidores WebSocket\n\u2502   \u251c\u2500\u2500 hls_utils.py    # Utilidades para streaming HLS\n\u2502   \u251c\u2500\u2500 models.py       # Modelos generales de la aplicaci\u00f3n\n\u2502   \u251c\u2500\u2500 routing.py      # Enrutamiento para canales WebSocket\n\u2502   \u251c\u2500\u2500 serializers.py  # Serializadores para la API REST\n\u2502   \u251c\u2500\u2500 settings.py     # Configuraci\u00f3n del proyecto\n\u2502   \u251c\u2500\u2500 urls.py         # URLs del proyecto\n\u2502   \u251c\u2500\u2500 views.py        # Vistas generales\n\u2502   \u2514\u2500\u2500 wsgi.py         # Configuraci\u00f3n WSGI\n\u251c\u2500\u2500 Peliculas              # Aplicaci\u00f3n para gesti\u00f3n de pel\u00edculas\n\u251c\u2500\u2500 series              # Aplicaci\u00f3n para gesti\u00f3n de series\n\u251c\u2500\u2500 Usuarios               # Aplicaci\u00f3n para gesti\u00f3n de usuarios\n\u251c\u2500\u2500 database            # Configuraci\u00f3n de base de datos\n\u251c\u2500\u2500 manage.py           # Script de administraci\u00f3n de Django\n\u251c\u2500\u2500 requirements.txt    # Dependencias del proyecto\n\u251c\u2500\u2500 Dockerfile          # Configuraci\u00f3n para Docker\n\u251c\u2500\u2500 docker-compose.yml  # Configuraci\u00f3n para Docker Compose\n\u2514\u2500\u2500 start.sh            # Script de inicio\n</code></pre>"},{"location":"backend/arquitectura/#componentes-principales","title":"Componentes principales","text":""},{"location":"backend/arquitectura/#aplicacion-core-cinecloud","title":"Aplicaci\u00f3n Core (cinecloud)","text":"<p>La aplicaci\u00f3n principal que coordina todas las funcionalidades del sistema:</p> <ul> <li>settings.py: Configuraci\u00f3n centralizada de Django, incluyendo bases de datos, aplicaciones instaladas y middleware</li> <li>urls.py: Punto de entrada para todas las rutas de la API</li> <li>asgi.py/wsgi.py: Configuraciones para servidores ASGI y WSGI</li> <li>consumers.py: Implementaci\u00f3n de WebSockets para streaming en tiempo real</li> <li>hls_utils.py: Utilidades para la implementaci\u00f3n de HTTP Live Streaming</li> </ul>"},{"location":"backend/arquitectura/#aplicaciones-especificas","title":"Aplicaciones espec\u00edficas","text":""},{"location":"backend/arquitectura/#peliculas","title":"Peliculas","text":"<p>Gestiona todo lo relacionado con pel\u00edculas:</p> <ul> <li>Modelos para pel\u00edculas y metadatos</li> <li>Vistas para listar, crear, actualizar y eliminar pel\u00edculas</li> <li>L\u00f3gica para categorizaci\u00f3n y b\u00fasqueda</li> <li>Procesamiento de archivos de video</li> </ul>"},{"location":"backend/arquitectura/#series","title":"Series","text":"<p>Similar a Peliculas, pero con estructuras adicionales:</p> <ul> <li>Gesti\u00f3n de temporadas</li> <li>Gesti\u00f3n de episodios</li> <li>Relaciones entre temporadas y series</li> </ul>"},{"location":"backend/arquitectura/#usuarios","title":"Usuarios","text":"<p>Gestiona la autenticaci\u00f3n y autorizaci\u00f3n:</p> <ul> <li>Perfiles de usuario extendidos</li> <li>Preferencias de usuario</li> <li>Historial de visualizaci\u00f3n</li> <li>Sistemas de recomendaci\u00f3n</li> </ul>"},{"location":"backend/arquitectura/#flujo-de-datos","title":"Flujo de datos","text":"<ol> <li>El cliente realiza una solicitud a trav\u00e9s de la API REST o WebSocket</li> <li>Los middleware procesan la solicitud (autenticaci\u00f3n, CORS, etc.)</li> <li>La solicitud se dirige a la vista o consumidor correspondiente</li> <li>Se accede a los modelos de datos seg\u00fan sea necesario</li> <li>Se procesa la l\u00f3gica de negocio</li> <li>Se serializa la respuesta</li> <li>Se env\u00eda la respuesta al cliente</li> </ol>"},{"location":"backend/arquitectura/#patrones-de-diseno","title":"Patrones de dise\u00f1o","text":"<p>Cinecloud Backend implementa varios patrones de dise\u00f1o:</p> <ul> <li>MVC (Modelo-Vista-Controlador): Separaci\u00f3n clara entre modelos de datos, vistas y controladores (llamados \"vistas\" en Django)</li> <li>REST: API basada en recursos con operaciones CRUD est\u00e1ndar</li> <li>Middleware: Capas de procesamiento para solicitudes entrantes y salientes</li> <li>Serializaci\u00f3n: Conversi\u00f3n de objetos complejos a formatos transmisibles (JSON)</li> <li>Dependency Injection: A trav\u00e9s del sistema de middleware y signals de Django</li> </ul>"},{"location":"backend/arquitectura/#sistema-de-streaming-hls","title":"Sistema de streaming HLS","text":"<p>El streaming de video utiliza HTTP Live Streaming (HLS) para proporcionar reproducci\u00f3n adaptativa:</p> <ol> <li>Los videos originales se procesan con FFmpeg</li> <li>Se generan m\u00faltiples versiones del video a diferentes resoluciones</li> <li>Los videos se segmentan en fragmentos peque\u00f1os (.ts)</li> <li>Se crea un archivo de manifiesto (.m3u8) que enumera los segmentos</li> <li>El cliente solicita el manifiesto y reproduce los segmentos adecuados seg\u00fan su ancho de banda</li> </ol> <pre><code>sequenceDiagram\n    participant Cliente\n    participant Servidor\n    participant FFmpeg\n    participant Almacenamiento\n    Cliente-&gt;&gt;Servidor: Solicita un video\n    Servidor-&gt;&gt;FFmpeg: Procesa el video original\n    FFmpeg--&gt;&gt;Servidor: Genera m\u00faltiples resoluciones y segmentos (.ts)\n    Servidor-&gt;&gt;Almacenamiento: Guarda los segmentos y manifiesto (.m3u8)\n    Cliente-&gt;&gt;Servidor: Solicita el archivo manifiesto (.m3u8)\n    Servidor--&gt;&gt;Cliente: Env\u00eda el archivo manifiesto\n    Cliente-&gt;&gt;Servidor: Solicita los segmentos adecuados (.ts)\n    Servidor--&gt;&gt;Cliente: Env\u00eda los segmentos para reproducci\u00f3n\n</code></pre>"},{"location":"backend/arquitectura/#diagrama-de-arquitectura","title":"Diagrama de arquitectura","text":"<pre><code>graph TD\n    Cliente[Cliente: Web/M\u00f3vil]\n    Frontend[Frontend: Angular]\n    Backend[Backend: Django]\n    Canales[Canales de Django]\n    DRF[Framework REST de Django]\n    Modelos[Modelos]\n    BD[(PostgreSQL)]\n    HLS[Streaming HLS]\n    FFmpeg[Procesamiento FFmpeg]\n    Almacenamiento[Almacenamiento de Medios]\n\n    Cliente --&gt; Frontend\n\n    Frontend --&gt;|API REST| Backend\n    Frontend --&gt;|WebSocket| Canales\n\n    Backend --&gt; DRF\n    Backend --&gt;|CRUD| Modelos\n    Backend --&gt; HLS\n\n    DRF --&gt; Modelos\n    Canales --&gt;|WebSocket| Modelos\n\n    Modelos --&gt; BD\n    HLS --&gt; FFmpeg\n    FFmpeg --&gt; Almacenamiento\n</code></pre>"},{"location":"backend/arquitectura/#seguridad","title":"Seguridad","text":"<p>La aplicaci\u00f3n implementa varias capas de seguridad:</p> <ul> <li>Autenticaci\u00f3n basada en tokens</li> <li>Manejo seguro de sesiones</li> <li>Protecci\u00f3n contra CSRF</li> <li>Validaci\u00f3n de entrada</li> <li>Sanitizaci\u00f3n de salida</li> <li>Seguridad a nivel de modelo (permisos de objeto)</li> </ul>"},{"location":"backend/arquitectura/#escalabilidad","title":"Escalabilidad","text":"<p>La arquitectura est\u00e1 dise\u00f1ada para escalar horizontalmente:</p> <ul> <li>Separaci\u00f3n clara entre componentes</li> <li>Uso de bases de datos relacionales robustas</li> <li>Soporte para balanceo de carga</li> <li>Procesamiento as\u00edncrono para tareas pesadas</li> <li>Modelos de cach\u00e9 para reducir carga de base de datos</li> </ul>"},{"location":"backend/instalacion/","title":"\ud83d\udce6 Gu\u00eda R\u00e1pida de Instalaci\u00f3n \u2013 Backend Cinecloud","text":"<p>Esta gu\u00eda te ayudar\u00e1 a instalar el backend de Cinecloud f\u00e1cilmente, ya sea en Linux o Windows, para desarrollo o producci\u00f3n.</p>"},{"location":"backend/instalacion/#opcion-1-instalacion-con-docker-recomendada","title":"\ud83d\ude80 Opci\u00f3n 1: Instalaci\u00f3n con Docker (Recomendada)","text":""},{"location":"backend/instalacion/#requisitos","title":"\u2705 Requisitos","text":"<ul> <li>Tener Docker y Docker Compose instalados.  </li> <li>Instalar Docker en Linux</li> <li>Instalar Docker Desktop en Windows</li> </ul>"},{"location":"backend/instalacion/#pasos","title":"\ud83d\udd27 Pasos","text":"<ol> <li> <p>Clona el repositorio:    <pre><code>git clone https://github.com/NaviStarp/CineCloud-backend.git\ncd CineCloud-backend\n</code></pre></p> </li> <li> <p>Inicia los servicios con Docker:    <pre><code>docker-compose up\n</code></pre>    O en segundo plano:    <pre><code>docker-compose up -d\n</code></pre></p> </li> <li> <p>Verifica que todo est\u00e9 corriendo:    <pre><code>docker ps\n</code></pre></p> </li> </ol> <p>\ud83d\udccd Accede a la app en tu navegador: \ud83d\udc49 <code>http://localhost:8000/</code></p>"},{"location":"backend/instalacion/#opcion-2-instalacion-manual-sin-docker","title":"\u2699\ufe0f Opci\u00f3n 2: Instalaci\u00f3n Manual (sin Docker)","text":""},{"location":"backend/instalacion/#requisitos_1","title":"\u2705 Requisitos","text":"<ul> <li>Tener Python 3.10+ instalado</li> <li>Tener PostgreSQL (si no usas Docker para la base de datos)</li> <li>Redis (opcional para tareas con Celery)</li> </ul>"},{"location":"backend/instalacion/#pasos-en-linux-o-wsl-windows","title":"\ud83d\udd27 Pasos en Linux o WSL (Windows)","text":"<ol> <li> <p>Clona el repositorio:    <pre><code>git clone https://github.com/NaviStarp/CineCloud-backend.git\ncd CineCloud-backend\n</code></pre></p> </li> <li> <p>Crea y activa un entorno virtual:    <pre><code>python -m venv .venv\nsource .venv/bin/activate      # Linux o WSL\n.venv\\Scripts\\activate         # Windows CMD/PowerShell\n</code></pre></p> </li> <li> <p>Instala las dependencias:    <pre><code>pip install -r requirements.txt\n</code></pre></p> </li> <li> <p>Configura tu base de datos PostgreSQL editando el archivo <code>.env</code> seg\u00fan tus necesidades.  </p> <p>Nota: Aunque no es obligatorio para el despliegue, se recomienda encarecidamente cambiar las contrase\u00f1as predeterminadas por razones de seguridad.</p> </li> <li> <p>Inicia la base de datos:    <pre><code>cd database\ndocker-compose up -d # Puede que necesites usar sudo en Linux\ncd ..\n</code></pre></p> </li> <li> <p>Aplica las migraciones:    <pre><code>python manage.py migrate\n</code></pre></p> </li> <li> <p>Inicia el servidor:</p> </li> </ol> <p>Para desarrollo:      <pre><code>python manage.py runserver\n</code></pre></p> <p>Para producci\u00f3n (Recomendado):      <pre><code>uvicorn --host 0.0.0.0 --port 8000 cinecloud.asgi:application\n</code></pre></p>"},{"location":"backend/instalacion/#inicio-automatico-linux","title":"\ud83e\udd16 Inicio Autom\u00e1tico (Linux)","text":"<p>Si usas Linux, puedes arrancar todo autom\u00e1ticamente con:</p> <pre><code>chmod +x start.sh\n./start.sh\n</code></pre> <p>Este script: - Activa el entorno virtual - Inicia Docker (base de datos) - Aplica migraciones - Lanza Uvicorn</p> <p>Nota: Este c\u00f3digo requiere que el entorno virtual est\u00e9 creado y que las dependencias necesarias est\u00e9n instaladas. Aseg\u00farate de haber configurado el entorno virtual utilizando herramientas como <code>venv</code> o <code>virtualenv</code> y de haber instalado las dependencias especificadas en el archivo <code>requirements.txt</code> antes de ejecutar el c\u00f3digo.</p>"},{"location":"backend/instalacion/#variables-de-entorno","title":"\u2699\ufe0f Variables de Entorno","text":"<p>Configura estas variables (en <code>.env</code>):</p> Variable Descripci\u00f3n Valor por defecto <code>DJANGO_SECRET_KEY</code> Clave secreta de Django <code>clave-supersecreta-docker</code> <code>DJANGO_DEBUG</code> Modo de depuraci\u00f3n (<code>True/False</code>) <code>False</code> <code>DJANGO_ALLOWED_HOSTS</code> Hosts permitidos <code>web,localhost,127.0.0.1</code> <code>CORS_ALLOW_ALL_ORIGINS</code> Permitir todos los or\u00edgenes CORS <code>True</code> <code>CORS_ALLOWED_ORIGINS</code> Or\u00edgenes permitidos CORS <code>http://localhost:4200</code> <code>CSRF_TRUSTED_ORIGINS</code> Or\u00edgenes confiables para CSRF <code>http://localhost:4200</code> <code>POSTGRES_DB</code> Nombre de la BD <code>bd</code> <code>POSTGRES_USER</code> Usuario de BD <code>admin</code> <code>POSTGRES_PASSWORD</code> Contrase\u00f1a de BD <code>secret_password</code> <code>POSTGRES_HOST</code> Host de la BD <code>db</code> <code>POSTGRES_PORT</code> Puerto de la BD <code>5432</code> <code>REDIS_HOST</code> Host Redis <code>redis</code> <code>REDIS_PORT</code> Puerto Redis <code>6379</code> <code>CELERY_BROKER_URL</code> URL de Celery <code>redis://redis:6379/0</code> <code>CELERY_RESULT_BACKEND</code> Backend de resultados de Celery <code>redis://redis:6379/0</code> <code>DJANGO_SUPERUSER_USERNAME</code> Usuario del superusuario Django <code>admin</code> <code>DJANGO_SUPERUSER_PASSWORD</code> Contrase\u00f1a del superusuario Django <code>admin</code>"},{"location":"backend/instalacion/#mas-informacion","title":"\ud83d\udcd8 M\u00e1s Informaci\u00f3n","text":"<ul> <li>\ud83d\udcd0 Arquitectura del Proyecto</li> </ul>"},{"location":"frontend/","title":"Cinecloud Frontend","text":"<p>Cinecloud Frontend es una aplicaci\u00f3n desarrollada en Angular que proporciona una interfaz de usuario moderna e intuitiva para interactuar con el backend de Cinecloud.</p> <p>Permite a los usuarios:</p> <ul> <li>Acceder a contenido multimedia</li> <li>Subir videos</li> <li>Disfrutar de streaming de alta calidad para pel\u00edculas y series</li> </ul> <p>Su dise\u00f1o responsive garantiza una experiencia \u00f3ptima en diversos dispositivos, y su arquitectura basada en componentes facilita el mantenimiento y escalabilidad del proyecto.</p>"},{"location":"frontend/#caracteristicas-principales","title":"Caracter\u00edsticas Principales","text":"<ul> <li>\u2705 Autenticaci\u00f3n de usuarios: Registro, login, y gesti\u00f3n de perfiles.</li> <li>\ud83c\udfa5 Reproductor HLS avanzado: Soporte para streaming adaptativo.</li> <li>\ud83d\uddc2\ufe0f Cat\u00e1logo interactivo: Filtros, b\u00fasquedas y navegaci\u00f3n intuitiva.</li> <li>\ud83d\udee0\ufe0f Panel de administraci\u00f3n: Herramientas para gestionar categorias y usuarios.</li> <li>\ud83d\udcf1 Dise\u00f1o responsive: Optimizado para m\u00f3vil, tablet y escritorio.</li> <li>\ud83c\udfa8 Temas personalizables: Elige entre una variedad de temas como Rojo, Verde, Morado, Azul y Naranja para personalizar la apariencia de la aplicaci\u00f3n.</li> </ul>"},{"location":"frontend/#siguientes-pasos","title":"Siguientes pasos","text":"<ul> <li>Instalaci\u00f3n: Gu\u00eda completa para configurar el frontend</li> </ul>"},{"location":"frontend/instalacion/","title":"Instalaci\u00f3n","text":""},{"location":"frontend/instalacion/#requisitos-previos","title":"Requisitos previos","text":"<p>Aseg\u00farate de tener instalado lo siguiente:</p> <ul> <li>Node.js (v14.x o superior)</li> <li>npm (incluido con Node.js)</li> <li>Angular CLI</li> <li>Backend de Cinecloud (necesario para la funcionalidad completa)</li> </ul>"},{"location":"frontend/instalacion/#clonar-el-repositorio","title":"Clonar el repositorio","text":"<pre><code>git clone https://github.com/NaviStarp/CineCloud-frontend.git\ncd CineCloud-frontend\n</code></pre>"},{"location":"frontend/instalacion/#instalar-dependencias","title":"Instalar dependencias","text":"<pre><code>npm install\n</code></pre>"},{"location":"frontend/instalacion/#iniciar-servidor-de-desarollo","title":"Iniciar servidor de desarollo","text":"<p><pre><code>ng serve\n</code></pre> La aplicaci\u00f3n estar\u00e1 disponible en http://localhost:4200.</p> <p>Para usar otro puerto: <pre><code>ng serve --port 4201\n</code></pre></p>"},{"location":"frontend/instalacion/#configuracion-del-entorno","title":"Configuraci\u00f3n del entorno","text":"<p>En el archivo de configuraci\u00f3n de entorno de Angular (<code>src/environments/environment.ts</code>), puedes especificar la IP y el puerto del backend:</p> <pre><code>export const environment = {\n    url: 'http://&lt;IP_DEL_BACKEND&gt;',\n    port: '&lt;PUERTO_DEL_BACKEND&gt;',\n};\n</code></pre>"},{"location":"frontend/instalacion/#construccion-para-produccion","title":"Construcci\u00f3n para producci\u00f3n","text":"<p><pre><code>ng build --configuration production\n</code></pre> Los archivos se generan en el directorio dist/. <pre><code># Estructura del proyecto\n\u251c\u2500\u2500 src/\n\u2502 \u251c\u2500\u2500 app/\n\u2502 \u2502 \u251c\u2500\u2500 app.component.*\n\u2502 \u2502 \u251c\u2500\u2500 general/\n\u2502 \u2502 \u251c\u2500\u2500 login/\n\u2502 \u2502 \u251c\u2500\u2500 login-signup/\n\u2502 \u2502 \u251c\u2500\u2500 media-list/\n\u2502 \u2502 \u251c\u2500\u2500 not-found/\n\u2502 \u2502 \u251c\u2500\u2500 pages/\n\u2502 \u2502 \u251c\u2500\u2500 services/\n\u2502 \u2502 \u251c\u2500\u2500 signup/\n\u2502 \u2502 \u2514\u2500\u2500 video-card/\n\u2502 \u251c\u2500\u2500 environments/\n\u2502 \u251c\u2500\u2500 index.html\n\u2502 \u251c\u2500\u2500 main.*\n\u2502 \u2514\u2500\u2500 styles.css\n\u251c\u2500\u2500 public/\n\u251c\u2500\u2500 angular.json\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 tailwind.config.js\n\u251c\u2500\u2500 tsconfig.*\n\u251c\u2500\u2500 LICENSE\n\u2514\u2500\u2500 README.md\n\n\n### Principales directorios\n\n- `app/general/`: Componentes reutilizables\n- `app/pages/`: P\u00e1ginas principales como `admin`, `media-gallery`, `movie-detail`, etc.\n- `app/services/`: Servicios e interceptores\n- `app/login-signup/`: Componentes y formularios de autenticaci\u00f3n\n- `media-gallery/`: Vista y carrusel de pel\u00edculas y series\n- `serie-detail/`: Gesti\u00f3n de temporadas y episodios\n</code></pre></p>"}]}